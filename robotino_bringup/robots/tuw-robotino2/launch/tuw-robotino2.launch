<?xml version="1.0"?>
<launch>

  <arg name="robot" default="tuw-robotino2"/>
  <arg name="use_robotino_safety" value="true" />
  <arg name="hostname" default="127.0.1.1" />
  <arg name="hostname_scrat" default="scrat"/>
  <arg name="hostname_robotino" default="robotino"/>
  <arg name="hostname_raspberrypi" default="raspberrypi"/>
  <arg name="env-script" default="$(find robotino_bringup)/env.sh"/>
  <arg name="env-script-rasp" default="/home/pi/catkin_ws/src/squirrel_interaction/env_rasp.sh"/>

  <!-- COMMON -->
  <!-- send robot urdf to param server -->
  <param name="robot_description" command="$(find xacro)/xacro.py '$(find robotino_bringup)/robots/$(arg robot)/urdf/robotino.urdf.xacro' real:=true" />
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" output="screen">
    <param name="publish_frequency" type="double" value="50.0" />
  </node>

  <group>
    <machine name="robotino" address="$(arg hostname_robotino)" env-loader="$(arg env-script)" default="true" timeout="30"/>

      <!-- BASE -->
    <node name="robotino_node" pkg="robotino_driver" type="robotino_driver" output="screen">
      <param name="hostname" value="$(arg hostname)" />
      <param name="max_linear_vel" value="0.5" />
      <param name="min_linear_vel" value="0.00005" />
      <param name="max_angular_vel" value="0.5" />
      <param name="min_angular_vel" value="0.00001" />
      <param name="downsample_kinect" value="true" />
      <param name="leaf_size_kinect" value="0.04" />
      <remap from="robotino_joint_states" to="joint_states" />
      <remap from="cmd_vel" to="robotino_cmd_vel" if="$(arg use_robotino_safety)" />
    </node>
    <include file="$(find robotino_safety)/launch/robotino_safety_node.launch" if="$(arg use_robotino_safety)">
      <arg name="use_safe_velocity" value="false" />
      <arg name="controller_vel_topic" value="/robotino_cmd_vel" />
      <arg name="bumper_topic" value="/bumper" />
      <arg name="scan_topic" value="/scan" />
    </include>
    <node name="robotino_odometry_node" pkg="robotino_driver" type="robotino_odometry_node" output="screen">
      <param name="hostname" value="$(arg hostname)" />
    </node>
    <include file="$(find robotino_bringup)/launch/origin_odom.launch" />
    <include file="$(find robotino_bringup)/launch/twist_mux.launch" >
        <arg name="robot" value="$(arg robot)" />
    </include>

    <!-- SKIN -->
    <include file="$(find airskin)/launch/startup.launch">
      <arg name="device" value="/dev/ttyAirskin" />
    </include>

    <!-- HOKUYO -->
    <node name="hokuyo" pkg="hokuyo_node" type="hokuyo_node" respawn="false" output="screen">
      <param name="port" type="string" value="/dev/ttyScan"/> 
      <param name="frame_id" type="string" value="hokuyo_link"/> 
      <param name="intensity" type="bool" value="false"/>
    </node>

    <!-- ARM -->
    <group ns="arm_controller">
      <remap from="robot_description" to="/robot_description" />
      <include file="$(find robotino_bringup)/launch/arm.launch" />
      <node name="joint_states_relay" pkg="topic_tools" type="relay" args="joint_states /joint_states" cwd="node" respawn="true" output="screen"/>
    </group>

    <!-- HAND -->
    <group ns="hand_controller">
      <remap from="robot_description" to="/robot_description" />
      <include file="$(find robotino_bringup)/launch/kclhand.launch" >
        <arg name="robot" value="$(arg robot)" />
        <arg name="port" value="/dev/ttyHand"/>
      </include>
      <node name="joint_states_relay" pkg="topic_tools" type="relay" args="joint_states /joint_states" cwd="node" respawn="true" output="screen"/>
    </group>

    <node name="sensing" pkg="squirrel_sensing_node" type="sensing" args="/dev/ttyFingertips em1" output="screen"/>

    <!--node name="wrist_safety" pkg="wrist_safety" type="wrist_safety" output="screen" /-->

    <!--node name="squirrel_view_controller" pkg="robotino_driver" type="squirrel_view_controller" output="screen"/-->
  </group>

  <group>
    <machine name="scrat" address="$(arg hostname_scrat)" env-loader="$(arg env-script)" default="true" timeout="30"/>

    <!-- KINECT -->
    <param name="/kinect/driver/z_scaling" value="1.065"/>
    <include file="$(find openni2_launch)/launch/openni2.launch" >
      <arg name="camera" value="kinect"/>
      <arg name="publish_tf" value="true" />
      <arg name="depth_registration" value="true"/>
    </include>

    <!-- BOARD: NECK, HEAD, DOOR -->
    <group ns="shell_controller">
      <node name="board" pkg="squirrel_interaction" type="board.py" />
    </group>

  </group>

  <group>
    <machine name="raspberrypi" address="$(arg hostname_raspberrypi)" env-loader="$(arg env-script-rasp)" default="true" user="pi" timeout="30"/>

    <node name="screen" pkg="squirrel_interaction" type="raspberry_screen_server.py" output="screen" />
    <node name="speakers" pkg="squirrel_interaction" type="play_sound.py" output="screen" />
    <node name="mouth" pkg="squirrel_interaction" type="mouth_speak.py" output="screen" />

  </group>

  <machine name="robotino" address="$(arg hostname_robotino)" env-loader="$(arg env-script)" default="true" timeout="30"/>

</launch>
